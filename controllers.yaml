# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2023 Ilia Sotnikov
---
esphome:
  # Required for proper resume handling and avoiding crash at startup when
  # winter mode enabled
  min_version: '2023.10.0'

sprinkler:
  - id: lawn_sprinklers
    main_switch:
      name: "Lawn sprinklers"
      icon: "mdi:sprinkler"
      id: lawn_sprinklers_main_switch
      on_turn_on:
        - lambda: |-
            #ifdef HAS_DISPLAY
            if (${display_id}->is_ready()) {
              ${display_id}->show_page(${display_page_when_active});
            }
            ${display_backlight_id}->turn_on();
            #endif
        - lambda: |-
            #ifdef HAS_RGB_LED
            auto call = ${led_id}->turn_on();
            call.perform();
            #endif
      on_turn_off:
        - !include
          file: script_refill_tank.yaml
          vars:
            sprinkler: lawn_sprinklers
            relay: ${peripherals_power_off_relay_id}
            condition: >-
              !id(disable_water_tank_refill).state
              && !id(water_tank_refill_after_each_valve).state
        - lambda: |-
            #ifdef HAS_RGB_LED
            auto call = ${led_id}->turn_off();
            call.perform();
            #endif
        - lambda: |-
            #ifdef HAS_DISPLAY
            ${display_backlight_id}->turn_off();
            #endif
    auto_advance_switch: "Lawn sprinklers Auto Advance"
    standby_switch:
      name: "Pause lawn sprinklers"
      id: lawn_sprinklers_standby_switch
      internal: true
    valve_overlap: ${valve_overlap}
    pump_start_pump_delay: ${pump_start_pump_delay}
    pump_stop_valve_delay: ${pump_stop_valve_delay}
    valves:
      - valve_switch:
          name: "South lawn"
          icon: "mdi:sprinkler"
          on_turn_off: !include
            file: script_refill_tank.yaml
            vars:
              sprinkler: lawn_sprinklers
              relay: ${peripherals_power_off_relay_id}
              condition: >-
                !id(disable_water_tank_refill).state
                && id(water_tank_refill_after_each_valve).state
        enable_switch: "Enable south lawn"
        run_duration_number:
          name: "South lawn run duration"
          icon: "mdi:timer"
          initial_value: ${run_duration_initial_value}
          restore_value: true
          unit_of_measurement: ${run_duration_uom}
        valve_switch_id: relay_1
        pump_switch_id: ${pump_relay_id}
      - valve_switch:
          name: "North lawn"
          icon: "mdi:sprinkler"
          on_turn_off: !include
            file: script_refill_tank.yaml
            vars:
              sprinkler: lawn_sprinklers
              relay: ${peripherals_power_off_relay_id}
              condition: >-
                !id(disable_water_tank_refill).state
                && id(water_tank_refill_after_each_valve).state
        enable_switch: "Enable north lawn"
        run_duration_number:
          name: "North lawn run duration"
          icon: "mdi:timer"
          initial_value: ${run_duration_initial_value}
          restore_value: true
          unit_of_measurement: ${run_duration_uom}
        valve_switch_id: relay_2
        pump_switch_id: ${pump_relay_id}
      - valve_switch:
          name: "West lawn"
          icon: "mdi:sprinkler"
          on_turn_off: !include
            file: script_refill_tank.yaml
            vars:
              sprinkler: lawn_sprinklers
              relay: ${peripherals_power_off_relay_id}
              condition: >-
                !id(disable_water_tank_refill).state
                && id(water_tank_refill_after_each_valve).state
        enable_switch: "Enable west lawn"
        run_duration_number:
          name: "West lawn run duration"
          icon: "mdi:timer"
          initial_value: ${run_duration_initial_value}
          restore_value: true
          unit_of_measurement: ${run_duration_uom}
        valve_switch_id: relay_3
        pump_switch_id: ${pump_relay_id}

  - id: flowerbed_sprinklers
    main_switch:
      name: "Flowerbed sprinklers"
      icon: "mdi:sprinkler"
      id: flowerbed_sprinklers_main_switch
      on_turn_on:
        - lambda: |-
            #ifdef HAS_DISPLAY
            if (${display_id}->is_ready()) {
              ${display_id}->show_page(${display_page_when_active});
            }
            ${display_backlight_id}->turn_on();
            #endif
        - lambda: |-
            #ifdef HAS_RGB_LED
            auto call = ${led_id}->turn_on();
            call.perform();
            #endif
      on_turn_off:
        - !include
          file: script_refill_tank.yaml
          vars:
            sprinkler: flowerbed_sprinklers
            relay: ${peripherals_power_off_relay_id}
            condition: >-
              !id(disable_water_tank_refill).state
              && !id(water_tank_refill_after_each_valve).state
        - lambda: |-
            #ifdef HAS_RGB_LED
            auto call = ${led_id}->turn_off();
            call.perform();
            #endif
        - lambda: |-
            #ifdef HAS_DISPLAY
            ${display_backlight_id}->turn_off();
            #endif
    auto_advance_switch: "Flowerbed sprinklers Auto Advance"
    standby_switch:
      name: "Pause flowerbed sprinklers"
      id: flowerbed_sprinklers_standby_switch
      internal: true
    valve_overlap: ${valve_overlap}
    pump_start_pump_delay: ${pump_start_pump_delay}
    pump_stop_valve_delay: ${pump_stop_valve_delay}
    valves:
      - valve_switch:
          name: "South flowerbed"
          icon: "mdi:sprinkler"
          on_turn_off: !include
            file: script_refill_tank.yaml
            vars:
              sprinkler: flowerbed_sprinklers
              relay: ${peripherals_power_off_relay_id}
              condition: >-
                !id(disable_water_tank_refill).state
                && id(water_tank_refill_after_each_valve).state
        enable_switch: "Enable south flowerbed"
        run_duration_number:
          name: "South flowerbed run duration"
          icon: "mdi:timer"
          initial_value: ${run_duration_initial_value}
          restore_value: true
          unit_of_measurement: ${run_duration_uom}
        valve_switch_id: relay_4
        pump_switch_id: ${pump_relay_id}
      - valve_switch:
          name: "West flowerbed"
          icon: "mdi:sprinkler"
          on_turn_off: !include
            file: script_refill_tank.yaml
            vars:
              sprinkler: flowerbed_sprinklers
              relay: ${peripherals_power_off_relay_id}
              condition: >-
                !id(disable_water_tank_refill).state
                && id(water_tank_refill_after_each_valve).state
        enable_switch: "Enable west flowerbed"
        run_duration_number:
          name: "West flowerbed"
          icon: "mdi:timer"
          initial_value: ${run_duration_initial_value}
          restore_value: true
          unit_of_measurement: ${run_duration_uom}
        valve_switch_id: relay_5
        pump_switch_id: ${pump_relay_id}

switch:
  - platform: template
    id: disable_water_tank_refill
    name: "Disable water tank refill"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: water_tank_refill_after_each_valve
    name: "Water tank refill after each valve"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: winter_mode
    name: "Winter mode"
    icon: "mdi:snowflake"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
    turn_on_action:
      - lambda: |-
          // Shutdown active operations on controllers if any
          id(lawn_sprinklers).shutdown();
          id(flowerbed_sprinklers).shutdown();
          // Put controllers into standby
          id(lawn_sprinklers_standby_switch).turn_on();
          id(flowerbed_sprinklers_standby_switch).turn_on();
          #ifdef HAS_SCHEDULE
          // Disable scheduled runs
          lawn_sprinklers_disabled->turn_on();
          flowerbed_sprinklers_disabled->turn_on();
          #endif
          // Turn off peripherals power (water level relay and alike)
          id(${peripherals_power_off_relay_id}).turn_on();
    turn_off_action:
      - lambda: |-
          // Move controllers out of standby mode
          id(flowerbed_sprinklers_standby_switch).turn_off();
          id(lawn_sprinklers_standby_switch).turn_off();
          #ifdef HAS_SCHEDULE
          // Enabled scheduled runs
          lawn_sprinklers_disabled->turn_off();
          flowerbed_sprinklers_disabled->turn_off();
          #endif
          // Enable peripherals power
          id(${peripherals_power_off_relay_id}).turn_off();
          // Update the state of the winter mode switch, so that any code checks
          // for its state actually sees it disabled (during the trigger the
          // `state` variable will still be `on` until trigger's code
          // completes
          id(winter_mode).publish_state(false);

      # Re-publish the state of rain and water tank empty sensors, so that
      # controllers reflect their actual state
      - lambda: !include
          file: script_rain_water_tank_sensors_action.yaml
          vars:
            triggered_by: winter_mode

button:
  - platform: template
    name: "Lawn sprinklers: shutdown"
    on_press:
      - sprinkler.shutdown: lawn_sprinklers
  - platform: template
    name: "Flowerbed sprinklers: shutdown"
    on_press:
      - sprinkler.shutdown: flowerbed_sprinklers
